name: Deployments

on:
  workflow_call:
    inputs:
      ref:
        type: string
        description: The branch, tag or SHA to deploy
        required: true
  workflow_dispatch:
    inputs:
      ref:
        type: string
        description: The branch, tag or SHA to deploy
        required: true

jobs:
  frontend-tests:
    uses: ./.github/workflows/backend_tests.yml
    with:
      ref: ${{ inputs.ref }}
    secrets: inherit

  backend-tests:
    uses: ./.github/workflows/frontend_tests.yml
    with:
      ref: ${{ inputs.ref }}
    secrets: inherit

  backend-deployment:
    needs:
      - frontend-tests
      - backend-tests
    name: Deploy Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - name: Deployment
        uses: appleboy/ssh-action@master
        env:
          DIR: ${{ secrets.BACKEND_DIR }}
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          username: ${{ secrets.SSH_USERNAME }}
          script: ./backend_deployment.sh

  frontend-build:
    needs:
      - frontend-tests
      - backend-tests
    name: Deploy Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}
      - name: Create prod file
        env:
          DOMAIN: ${{ secrets.BACKEND_DOMAIN }}
        run: |
          echo "export const environment = {  production: true,  backendDomain: '${DOMAIN}',};" > src/environments/environment.prod.ts
      - name: Use Node 18.x
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'
      - name: Get npm cache directory
        id: npm-cache-dir
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v3
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Archive build
        if: success()
        uses: actions/upload-artifact@v1
        with:
          name: deploy_dist
          path: frontend/dist

  frontend-deploy:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: frontend-build
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Download build
        uses: actions/download-artifact@v1
        with:
          name: deploy_dist
      - name: Copy artifact via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          username: ${{ secrets.SSH_USERNAME }}
          source: deploy_dist/cashbox-frontend
          strip_components: 2
          target: ${{ secrets.FRONTEND_DIR }}
